This patch fixes the microseconds values in the timestamps
of the pcap packets generated by udpdump.

--- udpdump.c.orig	2018-02-23 19:41:37.000000000 +0000
+++ udpdump.c	2018-04-01 13:40:44.897652002 +0100
@@ -267,11 +267,25 @@ static int dump_packet(const char* proto
 {
 	char* mbuf;
 	guint offset = 0;
-	time_t curtime = time(NULL);
+	struct timeval curtime;
 	guint64 bytes_written = 0;
 	int err;
 	int ret = EXIT_SUCCESS;
 
+#ifdef _WIN32
+	/* Get the system time as hundreds of nanoseconds since Jan 1 1601 */
+	FILETIME ft;
+	ULARGE_INTEGER hns;
+	GetSystemTimeAsFileTime(&ft);
+	hns.LowPart = ft.dwLowDateTime;
+	hns.HighPart = ft.dwHighDateTime;
+	/* Convert to seconds and microseconds since Jan 1 1970 */
+	curtime.tv_sec = (long)(hns.QuadPart / 10000000 - 11644473600);
+	curtime.tv_usec = (long)(hns.QuadPart / 10 % 1000000);
+#else
+	gettimeofday(&curtime, NULL);
+#endif
+
 	/* The space we need is the standard header + variable lengths */
 	mbuf = (char*)g_malloc0(UDPDUMP_EXPORT_HEADER_LEN + ((strlen(proto_name) + 3) & 0xfffffffc) + buflen);
 
@@ -285,7 +299,7 @@ static int dump_packet(const char* proto
 	memcpy(mbuf + offset, buf, buflen);
 	offset += (guint)buflen;
 
-	if (!libpcap_write_packet(fp, curtime, (guint32)(curtime / 1000), offset, offset, mbuf, &bytes_written, &err)) {
+	if (!libpcap_write_packet(fp, curtime.tv_sec, curtime.tv_usec, offset, offset, mbuf, &bytes_written, &err)) {
 		g_warning("Can't write packet");
 		ret = EXIT_FAILURE;
 	}
